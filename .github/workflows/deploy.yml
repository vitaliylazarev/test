name: FastAPI VPS Manager FIN

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action to perform'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - delete

jobs:
  deploy:
    name: 🚀 Deploy Application
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'deploy' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        timeout: 300s
        script: |
          echo "🚀 Starting deployment process..."
          mkdir -p ~/app
          cd ~/app
          
          # Клонируем или обновляем репозиторий
          if [ ! -d .git ]; then
            echo "📦 Cloning repository for the first time..."
            git clone https://github.com/${{ github.repository }}.git .
          else
            echo "🔄 Pulling latest changes..."
            git fetch origin
            git reset --hard origin/main
          fi
          
          echo "🐳 Building and starting containers..."
          docker compose up -d --build
          
          echo "✅ Deployment completed successfully!"
          echo "🌐 Application available at: http://${{ secrets.VPS_HOST }}:8000"
          echo "📊 Running containers:"
          docker ps

  delete:
    name: 🗑️ Delete Containers
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'delete' }}
    
    steps:
    - name: Delete containers on VPS
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          echo "🛑 Stopping and removing containers..."
          cd ~/app 2>/dev/null && docker compose down -v || echo "⚠️ No containers to remove"
          
          echo "🧹 Cleaning up Docker resources..."
          docker system prune -af --volumes 2>/dev/null || true
          
          echo "✅ Cleanup completed!"
          echo "📋 All containers removed"