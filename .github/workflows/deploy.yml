name: FastAPI CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action to perform'
        required: true
        default: 'deploy'
        type: choice
        options:
          - build
          - deploy
          - cleanup

jobs:
  build:
    name: 🏗️ Build Docker Image
    if: ${{ github.event.inputs.action == 'build' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: my-fastapi-app:latest
        
    - name: Save build info
      run: |
        echo "✅ Build completed successfully!"
        echo "📦 Image: my-fastapi-app:latest"

  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    # УБИРАЕМ needs: build - чтобы deploy мог запускаться независимо
    if: ${{ github.event.inputs.action == 'deploy' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          echo "🚀 Starting deployment..."
          mkdir -p ~/app
          cd ~/app
          
          if [ ! -d .git ]; then
            echo "📦 Cloning repository..."
            git clone https://github.com/${{ github.repository }}.git .
          else
            echo "🔄 Pulling latest changes..."
            git fetch origin
            git reset --hard origin/main
          fi
          
          echo "🐳 Building and starting containers..."
          docker compose up -d --build
          
          echo "✅ Deployment completed successfully!"
          echo "🌐 Application available at: http://${{ secrets.VPS_HOST }}:8000"
          docker ps

  cleanup:
    name: 🧹 Cleanup Resources
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'cleanup' }}
    
    steps:
    - name: Cleanup on VPS
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          echo "🧹 Starting cleanup..."
          cd ~/app 2>/dev/null && docker compose down -v || echo "⚠️ No containers to remove"
          docker system prune -af
          echo "✅ Cleanup completed!"

  status:
    name: 📊 Pipeline Status
    runs-on: ubuntu-latest
    needs: [build, deploy, cleanup]
    if: always()
    
    steps:
    - name: Show results
      run: |
        echo "📋 Pipeline Results:"
        echo "Build: ${{ needs.build.result || 'skipped' }}"
        echo "Deploy: ${{ needs.deploy.result || 'skipped' }}"
        echo "Cleanup: ${{ needs.cleanup.result || 'skipped' }}"
        echo "Workflow ID: ${{ github.run_id }}"